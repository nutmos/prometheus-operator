// Copyright The prometheus-operator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// RocketChatConfigApplyConfiguration represents a declarative configuration of the RocketChatConfig type for use
// with apply.
type RocketChatConfigApplyConfiguration struct {
	SendResolved *bool   `json:"sendResolved,omitempty"`
	APIURL       *string `json:"APIURL,omitempty"`
	Channel      *string `json:"title,omitempty"`
}

// RocketChatConfigApplyConfiguration constructs a declarative configuration of the RocketChatConfig type for use with
// apply.
func RocketChatConfig() *RocketChatConfigApplyConfiguration {
	return &RocketChatConfigApplyConfiguration{}
}

// WithSendResolved sets the SendResolved field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SendResolved field is set to the value of the last call.
func (b *RocketChatConfigApplyConfiguration) WithSendResolved(value bool) *RocketChatConfigApplyConfiguration {
	b.SendResolved = &value
	return b
}

// WithAPIURL sets the APIURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIURL field is set to the value of the last call.
func (b *RocketChatConfigApplyConfiguration) WithAPIURL(value string) *RocketChatConfigApplyConfiguration {
	b.APIURL = &value
	return b
}

// WithChannel sets the Channel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Channel field is set to the value of the last call.
func (b *RocketChatConfigApplyConfiguration) WithChannel(value string) *RocketChatConfigApplyConfiguration {
	b.Channel = &value
	return b
}
